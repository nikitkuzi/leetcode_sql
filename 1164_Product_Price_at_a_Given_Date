# Write your MySQL query statement below
-- with q1 as (
--     select *, rank() over(partition by product_id order by change_date desc) as r
--     from products
--     where change_date <= "2019-08-16"
-- ), q2 as (
--     select  distinct p.product_id, coalesce(q1.new_price,10) as price
--     from q1
--     right join products as p on p.product_id = q1.product_id
--     where q1.r = 1 or p.product_id not in (select product_id from q1)
-- ) select * from q2



# Write your MySQL query statement below
WITH cte AS
(SELECT *, RANK() OVER (PARTITION BY product_id ORDER BY change_date DESC) AS r 
FROM Products
WHERE change_date<= '2019-08-16')

SELECT distinct product_id, new_price AS price
FROM cte
WHERE r = 1
UNION
SELECT product_id, 10 AS price
FROM Products
WHERE product_id NOT IN (SELECT product_id FROM cte)

-- with temp as
-- (select 
--     *
--     , rank() over (partition by product_id order by change_date desc) as rn
-- from 
--     Products
-- where
--     change_date <= '2019-08-16'
-- )

-- select 
--     distinct
--     a.product_id
--     , if(b.product_id is not null, b.new_price, 10) as price
-- from 
--     (select 
--         distinct product_id
--     from 
--         products) a
-- left join 
--     (select 
--         *
--     from 
--         temp
--     where 
--         rn = 1) b
-- on 
--     a.product_id = b.product_id